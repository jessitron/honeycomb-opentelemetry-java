plugins {
    id 'java'
    id('com.github.johnrengelman.shadow') version '6.0.0'
}

group 'io.honeycomb'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext.relocatePackages = { shadowJar ->
    // Prevents conflict with other SLF4J instances. Important for premain.
    shadowJar.relocate 'org.slf4j', 'io.opentelemetry.javaagent.slf4j'
    // rewrite dependencies calling Logger.getLogger
    shadowJar.relocate 'java.util.logging.Logger', 'io.opentelemetry.javaagent.shaded.instrumentation'

    // rewrite library instrumentation dependencies
    shadowJar.relocate 'io.opentelemetry.instrumentation', 'io.opentelemetry.javaagent.shaded.instrumentation'

    // relocate OpenTelemetry API usage
    shadowJar.relocate 'io.opentelemetry.api', 'io.opentelemetry.javaagent.shaded.io.opentelemetry.api'
    shadowJar.relocate 'io.opentelemetry.semconv', 'io.opentelemetry.javaagent.shaded.io.opentelemetry.semconv'
    shadowJar.relocate 'io.opentelemetry.context', 'io.opentelemetry.javaagent.shaded.io.opentelemetry.context'

    // relocate the OpenTelemetry extensions that are used by instrumentation modules
    // these extensions live in the AgentClassLoader, and are injected into the user's class loader
    // by the instrumentation modules that use them
    shadowJar.relocate 'io.opentelemetry.extension.aws', 'io.opentelemetry.javaagent.shaded.io.opentelemetry.extension.aws'
    shadowJar.relocate 'io.opentelemetry.extension.kotlin', 'io.opentelemetry.javaagent.shaded.io.opentelemetry.extension.kotlin'
}

def relocatePackages = ext.relocatePackages

configurations {
    customShadow
}

CopySpec isolateSpec() {
    return copySpec {
        configurations.customShadow.files.each {
            from(zipTree(it)) {
                into("inst")
                rename("(^.*)\\.class\$", "\$1.classdata")
            }
        }
    }
}

tasks {
    shadowJar {
        with isolateSpec()

        duplicatesStrategy = DuplicatesStrategy.EXCLUDE

        mergeServiceFiles {
            include("inst/META-INF/services/*")
        }
        exclude("**/module-info.class")

        relocatePackages(it)

        manifest {
            attributes.put("Main-Class", "io.opentelemetry.javaagent.OpenTelemetryAgent")
            attributes.put("Agent-Class", "io.opentelemetry.javaagent.OpenTelemetryAgent")
            attributes.put("Premain-Class", "io.opentelemetry.javaagent.OpenTelemetryAgent")
            attributes.put("Can-Redefine-Classes", "true")
            attributes.put("Can-Retransform-Classes", "true")
            attributes.put("Implementation-Vendor", "Demo")
            attributes.put("Implementation-Version", "honeycomb-otel-1.0-SNAPSHOT")
        }
    }
}

dependencies {
    implementation 'io.opentelemetry:opentelemetry-api:1.0.1'
    implementation 'io.opentelemetry:opentelemetry-sdk:1.0.1'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp:1.0.1'
    implementation 'io.opentelemetry:opentelemetry-sdk-extension-autoconfigure:1.1.0-alpha'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    testCompile group: 'junit', name: 'junit', version: '4.13.2'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.8.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.1'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.19.0'
}

assemble {
    dependsOn(shadowJar)
}
